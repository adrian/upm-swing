<?xml version="1.0" encoding="UTF-8"?>

<!--
 Universal Password Manager
 Copyright (C) 2005-2011 Adrian Smith

 This file is part of Universal Password Manager.
   
 Universal Password Manager is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 Universal Password Manager is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Universal Password Manager; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->

<project name="Universal Password Manager" default="package-jar" basedir=".">

    <property file="build.properties"/>

    <!-- Set all the project properties -->
    <property name="src" value="src"/>
    <property name="test.src" value="test"/>
    <property name="build" value="build"/>
    <property name="build.instrumented" value="build.instrumented"/>
    <property name="test.build" value="testbuild"/>
    <property name="dist" value="dist"/>
    <property name="short.name" value="upm"/>
    <property name="full.name" value="UPM"/>
    <property name="lib" value="lib"/>
    <property name="coveragereport.dir" value="coveragereport.dir"/>
    <property name="version" value="1.15.1" />


    <!-- Define a classpath for use later on -->
    <path id="project.class.path">
        <pathelement path="${build}"/>
        <pathelement path="${test.build}"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- The clean target cleans the environment -->
    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${test.build}"/>
        <delete dir="${dist}"/>
        <delete dir="${build.instrumented}"/>
        <delete dir="${coveragereport.dir}"/>
        <delete>
            <fileset dir="${basedir}" includes="TEST-*"/>
        </delete>
        <delete file="cobertura.ser"/>
    </target>


    <!-- The compile target compiles the source -->
    <target name="compile">
        <mkdir dir="${build}"/>
        <javac srcdir="${src}" destdir="${build}" debug="on" failonerror="true" source="8" target="8" includeAntRuntime="no">
            <classpath refid="project.class.path"/>
            <compilerarg value="-Xbootclasspath/p:${toString:project.class.path}"/>
        </javac>

        <mkdir dir="${test.build}"/>
        <javac srcdir="${test.src}" destdir="${test.build}" debug="on" failonerror="true" source="8" target="8" includeAntRuntime="no">
            <classpath refid="project.class.path"/>
            <compilerarg value="-Xbootclasspath/p:${toString:project.class.path}"/>
        </javac>

        <copy todir="${build}">
            <fileset dir="${src}">
                <exclude name="**\*.java"/>
            </fileset>
        </copy>
    </target>


    <target name="checkversion">
        <fail unless="version" message="Need to pass the parameter 'version' to this target"/>
    </target>


    <target name="package-jar" depends="checkversion, clean, compile">
        <delete dir="${dist}"/>

        <mkdir dir="${dist}\build"/>
        <jar destfile="${dist}\build\${short.name}.jar" basedir="${build}" includes="**\*.class **\*.gif **\*.png **\*.properties">
            <manifest>
                <attribute name="Implementation-Title" value="${short.name}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Class-Path" value="commons-codec-1.3.jar commons-httpclient-3.0.jar commons-logging-1.1.jar bcprov-jdk14-145.jar javacsv.jar commons-validator-1.4.0.jar"/>
                <attribute name="Main-Class" value="com._17od.upm.gui.MainWindow"/>
            </manifest>
        </jar>
    </target>


    <!-- Package the basic JAR distribution -->
    <target name="package-tgz" depends="package-jar">
        <copy file="${basedir}\server\http\upload.php" todir="${dist}\build\server\http"/>
        <copy file="${basedir}\server\http\deletefile.php" todir="${dist}\build\server\http"/>
        <copy file="${basedir}\lib\commons-codec-1.3.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\commons-httpclient-3.0.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\commons-logging-1.1.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\bcprov-jdk14-145.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\javacsv.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\commons-validator-1.4.0.jar" todir="${dist}\build"/>
        <copy file="${basedir}\images\128x128\upm.png" tofile="${dist}\build\upm.png"/>
        <copy file="${basedir}\COPYING.txt" todir="${dist}\build"/>
        <copy file="${basedir}\README.txt" todir="${dist}\build"/>
        <tar destfile="${dist}\${short.name}-${version}.tar">
            <tarfileset file="${basedir}\bin\upm.sh" prefix="${short.name}-${version}" filemode="755"/>
            <tarfileset dir="${dist}\build" prefix="${short.name}-${version}"/>
        </tar>
        <gzip src="${dist}\${short.name}-${version}.tar" destfile="${dist}\${short.name}-${version}.tar.gz"/>
        <delete file="${dist}\${short.name}-${version}.tar"/>
    </target>


    <!-- Package the source distribution -->
    <target name="package-src" depends="checkversion">
        <tar destfile="${dist}\${short.name}-src-${version}.tar">
            <tarfileset dir="${basedir}" prefix="${short.name}-src-${version}">
                <include name="Authors"/>
                <include name="bin\**"/>
                <include name="build.properties.tmpl"/>
                <include name="build.xml"/>
                <include name="contrib\**"/>
                <include name="COPYING.txt"/>
                <include name="debian\**"/>
                <include name="images\**"/>
                <include name="lib\**"/>
                <include name="nsis\upm.nsi"/>
                <include name="README_DEV.txt"/>
                <include name="README.txt"/>
                <include name="server\**"/>
                <include name="src\**"/>
                <include name="test\**"/>
                <include name="upm.properties.tmpl"/>
            </tarfileset>
        </tar>
        <gzip src="${dist}\${short.name}-src-${version}.tar" destfile="${dist}\${short.name}-src-${version}.tar.gz"/>
        <delete file="${dist}\${short.name}-src-${version}.tar"/>
    </target>


    <!-- Package Mac OS X distribution -->
    <target name="package-osx" depends="package-jar">
        <property name="dist-mac-dir" value="${basedir}/${dist}/${short.name}-mac-${version}"/>
        <mkdir dir="${dist-mac-dir}"/>
        <copy file="${basedir}\server\http\upload.php" todir="${dist-mac-dir}\server\http"/>
        <copy file="${basedir}\server\http\deletefile.php" todir="${dist-mac-dir}\server\http"/>
        <copy file="${basedir}\COPYING.txt" todir="${dist-mac-dir}"/>
        <copy file="${basedir}\README.txt" todir="${dist-mac-dir}"/>

        <!-- https://bitbucket.org/infinitekind/appbundler/overview -->
        <taskdef name="bundleapp"
            classpath="${lib}/appbundler-1.0ea.jar"
            classname="com.oracle.appbundler.AppBundlerTask"/>

        <bundleapp
            outputdirectory="${dist-mac-dir}"
            name="${full.name}"
            displayname="${full.name}"
            executableName="UPM"
            identifier="com._17od.upm.gui.MainWindow"
            shortversion="${version}"
            version="${version}"
            icon="${basedir}\images\upm.icns"
            mainclassname="com._17od.upm.gui.MainWindow"
            copyright="2019 Adrian Smith"
            applicationCategory="public.app-category.utilities">

            <arch name="x86_64"/>
            <arch name="i386"/>

            <option value="-Xdock:name=${full.name}"/>
            <option value="-Dapple.laf.useScreenMenuBar=true"/>
            <option value="-Dcom.apple.macos.use-file-dialog-packages=true"/>
            <option value="-Dcom.apple.macos.useScreenMenuBar=true"/>
            <option value="-Dcom.apple.mrj.application.apple.menu.about.name=${app.name}"/>
            <option value="-Dcom.apple.smallTabs=true"/>
            <option value="-Dfile.encoding=UTF-8"/>

            <classpath dir="${basedir}\lib" includes="commons-codec-1.3.jar, commons-httpclient-3.0.jar, commons-logging-1.1.jar bcprov-jdk14-145.jar javacsv.jar commons-validator-1.4.0.jar"/>
            <classpath dir="${dist}\build" includes="${short.name}.jar"/>
        </bundleapp>

        <exec executable="tar" dir="${basedir}">
            <arg line="-czvf dist/${short.name}-mac-${version}.tar.gz -C dist/ ${short.name}-mac-${version}"/>
        </exec>
    </target>


    <!-- Package Windows installer -->
    <target name="package-windows" depends="package-jar">
        <exec executable="makensis" dir="${basedir}">
            <arg line="-DUPM_VERSION=${version} ${basedir}/nsis/upm.nsi"/>
        </exec>
        <move file="${basedir}/nsis/upm-${version}.exe" todir="${dist}"/>
    </target>


    <target name="package-all" depends="package-tgz, package-src, package-osx, package-windows"/>


    <target name="instrument-classes" depends="compile">
        <path id="cobertura.classpath">
            <fileset dir="${cobertura.dir}">
                <include name="cobertura.jar" />
                <include name="lib\**\*.jar" />
            </fileset>
        </path>
        <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

        <!-- Compile the Cobertura instrumented classes -->
        <delete file="cobertura.ser"/>
        <cobertura-instrument todir="${build.instrumented}">
            <fileset dir="${build}"/>
        </cobertura-instrument>
    </target>


    <target name="test" depends="compile">
        <!-- I had to put the junit.jar file into my ANT_HOME\lib in order for
             the junit task to work -->
        <junit haltonerror="on" haltonfailure="on" printsummary="on" showoutput="on" fork="yes">
            <classpath location="${build}"/>
            <classpath refid="project.class.path"/>
            <jvmarg value="-Djunit.properties=${basedir}/build.properties"/>
            <jvmarg value="-Dupm.properties=${basedir}/upm.properties"/>
            <formatter type="plain"/>
            <batchtest if="test">
                <fileset dir="${test.build}">
                    <include name="**\${test}.class"/>
                </fileset>
            </batchtest>
            <batchtest unless="test">
                <fileset dir="${test.build}">
                    <include name="**\*.class"/>
                    <exclude name="**\TestHTTPTransport.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <target name="int-test" depends="compile" description="Run integration tests">
        <junit haltonerror="on" haltonfailure="on" printsummary="on" showoutput="on" fork="yes">
            <classpath location="${build}"/>
            <classpath refid="project.class.path"/>
            <jvmarg value="-Djunit.properties=${basedir}/build.properties"/>
            <jvmarg value="-Dupm.properties=${basedir}/upm.properties"/>
            <formatter type="plain"/>
            <batchtest>
                <fileset dir="${test.build}">
                    <include name="**\TestHTTPTransport.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <target name="coverage" depends="instrument-classes">
        <junit haltonerror="on" haltonfailure="on" printsummary="on" showoutput="on" fork="yes">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser"/>
            <classpath location="${build.instrumented}"/>
            <classpath refid="project.class.path"/>
            <classpath refid="cobertura.classpath"/>
            <jvmarg value="-Djunit.properties=${basedir}/build.properties"/>
            <jvmarg value="-Dupm.properties=${basedir}/upm.properties"/>
            <formatter type="plain"/>
            <batchtest if="test">
                <fileset dir="${test.build}">
                    <include name="**\${test}.class"/>
                </fileset>
            </batchtest>
            <batchtest unless="test">
                <fileset dir="${test.build}">
                    <include name="**\*.class"/>
                </fileset>
            </batchtest>
        </junit>
        <cobertura-report format="html" destdir="${coveragereport.dir}" srcdir="${src}"/>
    </target>


    <target name="localise">
        <native2ascii encoding="UTF-16BE" src="${src}" dest="${src}" includes="**/*.unicode" ext=".properties"/>
    </target>


    <target name="run" depends="compile">
        <java classname="com._17od.upm.gui.MainWindow"
              classpathref="project.class.path"
              fork="true"
              spawn="true"/>
    </target>

</project>
